{"version":3,"sources":["assets/noPosterSmall.png","components/Section.js","components/Message.js","components/Poster.js","components/Loader.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","components/Header/Header.js","components/Header/index.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","components/Router.js","components/GlobalStyles.js","components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","role","aria-label","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Loader","map","movie","key","poster_path","original_title","vote_average","release_date","params","api_key","language","api","axios","create","baseURL","moviesApi","get","movieDetail","append_to_response","search","term","query","encodeURIComponent","tvApi","topRated","airingToday","showDetail","HomeContainer","state","data","results","this","setState","console","log","React","Component","TVPresenter","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","async","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","request","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d177080.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.460a77d5.png\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${props => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired\n};\n\nexport default Message;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${props => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  bottom: 5px;\r\n  right: 5px;\r\n  position: absolute;\r\n  opacity: 0;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : require(\"../assets/noPosterSmall.png\")\r\n          }\r\n        />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ⭐️\r\n          </span>{\" \"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool\r\n};\r\n\r\nexport default Poster;\r\n\r\n\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 28px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport default () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      ⏰\r\n    </span>\r\n  </Container>\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"components/Section\";\r\nimport Message from \"components/Message\";\r\nimport Poster from \"components/Poster\";\r\nimport Loader from \"components/Loader\";\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Movies | Nomflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        <Helmet>\r\n          <title>Movies | Nomflix</title>\r\n        </Helmet>\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n          <Section title=\"Now Playing\">\r\n            {nowPlaying.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {upcoming && upcoming.length > 0 && (\r\n          <Section title=\"Upcoming Movies\">\r\n            {upcoming.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Movies\">\r\n            {popular.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\nexport default HomePresenter;\r\n","import axios from \"axios\";\r\n\r\nconst params = {\r\n  api_key: \"59caaaf6db048b723bf9adf4f0380be1\",\r\n  language: \"en-US\"\r\n};\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\"\r\n});\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\", { params }),\r\n  upcoming: () => api.get(\"movie/upcoming\", { params }),\r\n  popular: () => api.get(\"movie/popular\", { params }),\r\n  movieDetail: id =>\r\n    api.get(`movie/${id}`, {\r\n      params: { ...params, append_to_response: \"videos\" }\r\n    }),\r\n  search: term =>\r\n    api.get(\"search/movie\", {\r\n      params: { ...params, query: encodeURIComponent(term) }\r\n    })\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\", { params }),\r\n  popular: () => api.get(\"tv/popular\", { params }),\r\n  airingToday: () => api.get(\"tv/airing_today\", { params }),\r\n  showDetail: id =>\r\n    api.get(`tv/${id}`, {\r\n      params: { ...params, append_to_response: \"videos\" }\r\n    }),\r\n  search: term =>\r\n    api.get(\"search/tv\", {\r\n      params: { ...params, query: encodeURIComponent(term) }\r\n    })\r\n};\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { moviesApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying }\r\n      } = await moviesApi.nowPlaying();\r\n      const {\r\n        data: { results: upcoming }\r\n      } = await moviesApi.upcoming();\r\n      const {\r\n        data: { results: popular }\r\n      } = await moviesApi.popular();\r\n      this.setState({\r\n        nowPlaying,\r\n        upcoming,\r\n        popular\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find movies information.\"\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state);\r\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upcoming={upcoming}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"../../components/Section\";\r\nimport Loader from \"../../components/Loader\";\r\nimport Poster from \"../../components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title> Loading.. </title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : (\r\n    <Container>\r\n      {\" \"}\r\n      <Helmet>\r\n        <title>Tv | Nomflix</title>\r\n      </Helmet>\r\n      {topRated && topRated.length > 0 && (\r\n        <Section title=\"Top Rated Shows\">\r\n          {topRated.map(show => (\r\n            <Poster\r\n              key={show.id}\r\n              id={show.id}\r\n              imageUrl={show.poster_path}\r\n              title={show.original_name}\r\n              rating={show.vote_average}\r\n              year={show.first_air_date.substring(0, 4)}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {popular && popular.length > 0 && (\r\n        <Section title=\"Popular Shows\">\r\n          {popular.map(show => (\r\n            <Poster\r\n              key={show.id}\r\n              id={show.id}\r\n              imageUrl={show.poster_path}\r\n              title={show.original_name}\r\n              rating={show.vote_average}\r\n              year={show.first_air_date.substring(0, 4)}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {airingToday && airingToday.length > 0 && (\r\n        <Section title=\"Airing Today\">\r\n          {airingToday.map(show => (\r\n            <Poster\r\n              key={show.id}\r\n              id={show.id}\r\n              imageUrl={show.poster_path}\r\n              title={show.original_name}\r\n              rating={show.vote_average}\r\n              year={show.first_air_date.substring(0, 4)}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n    </Container>\r\n  );\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;\r\n","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \".api./../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    loading: true,\r\n    error: null\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated }\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: popular }\r\n      } = await tvApi.popular();\r\n      const {\r\n        data: { results: airingToday }\r\n      } = await tvApi.airingToday();\r\n      this.setState({ topRated, popular, airingToday });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find TV information.\"\r\n      });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n  render() {\r\n    console.log(this.state);\r\n    const { topRated, popular, airingToday, loading, error } = this.state;\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        loading={loading}\r\n        error={error}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"components/Loader\";\r\nimport Section from \"components/Section\";\r\nimport Message from \"components/Message\";\r\nimport Poster from \"components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  loading,\r\n  searchTerm,\r\n  handleSubmit,\r\n  error,\r\n  updateTerm\r\n}) => (\r\n  <Container>\r\n    <Helmet>\r\n      <title> Search | Dosfilx </title>\r\n    </Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        placeholder=\"Search Movies or TV Shows...\"\r\n        value={searchTerm}\r\n        onChange={updateTerm}\r\n      />\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <>\r\n        {movieResults && movieResults.length > 0 && (\r\n          <Section title=\"Movie Results\">\r\n            {movieResults.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvResults && tvResults.length > 0 && (\r\n          <Section title=\"TV Show Results\">\r\n            {tvResults.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n        {tvResults &&\r\n          movieResults &&\r\n          tvResults.length === 0 &&\r\n          movieResults.length === 0 && (\r\n            <Message text={`Nothing found : ${searchTerm}`} color=\"#95a5a6\" />\r\n          )}\r\n      </>\r\n    )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  error: PropTypes.string,\r\n  searchTerm: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    loading: false,\r\n    error: null\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n  updateTerm = event => {\r\n    const {\r\n      target: { value }\r\n    } = event;\r\n    this.setState({\r\n      searchTerm: value\r\n    });\r\n  };\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ loading: true });\r\n    try {\r\n      const {\r\n        data: { results: movieResults }\r\n      } = await moviesApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResults }\r\n      } = await tvApi.search(searchTerm);\r\n      this.setState({\r\n        movieResults,\r\n        tvResults\r\n      });\r\n    } catch {\r\n      this.setState({ error: `Can't find results. ` });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        loading={loading}\r\n        error={error}\r\n        searchTerm={searchTerm}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n//transparent없이 border설정하면, bordera가 없기 떄문에 border가 생길때마다 content부분이 줄어들어.\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 3px solid\r\n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\r\n  transition: border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));\r\n","import Header from \"./Header\";\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"components/Loader\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(1px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n`;\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 16px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 70%;\r\n`;\r\nconst DetailPresenter = ({ result, loading, error }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title> Loading | Dosfilx </title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {\" \"}\r\n          {result.original_title\r\n            ? result.original_title\r\n            : result.original_name}{\" \"}\r\n          | Dosfilx{\" \"}\r\n        </title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../../assets/noPosterSmall.png\")\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>\r\n            {result.original_title\r\n              ? result.original_title\r\n              : result.original_name}\r\n          </Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date.substring(0, 4)}\r\n            </Item>\r\n            <Divider>•</Divider>\r\n            <Item>\r\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\r\n            </Item>\r\n            <Divider>•</Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name} / `\r\n                )}\r\n            </Item>\r\n          </ItemContainer>\r\n          <Overview>{result.overview}</Overview>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  //클래스 생성자 | props에서 url에 movie가 포함되어 있으면 state의 isMoive 참으로 해주기.\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname }\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\")\r\n    };\r\n  }\r\n  //props에서 id랑 push 얻어와서 id가 넘버면 api로 디테일 사항 가져오고, 아니라면 홈으로 푸쉬 해주기.\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id }\r\n      },\r\n      history: { push }\r\n    } = this.props;\r\n    const { isMovie } = this.state;\r\n    const parsedId = parseInt(id);\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n    let result = null;\r\n    try {\r\n      if (isMovie) {\r\n        const request = await moviesApi.movieDetail(parsedId);\r\n        result = request.data;\r\n      } else {\r\n        ({ data: result } = await tvApi.showDetail(parsedId));\r\n      }\r\n    } catch {\r\n      this.setState({ error: \"Can't find anything.\" });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n  render() {\r\n    console.log(this.state);\r\n    const { result, error, loading } = this.state;\r\n    return <DetailPresenter result={result} error={error} loading={loading} />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"Routes/TV\";\r\nimport Search from \"Routes/Search\";\r\nimport Header from \"components/Header\";\r\nimport Detail from \"Routes/Detail\";\r\n\r\nexport default () => (\r\n  <Router>\r\n    <>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/tv\" component={TV} />\r\n        <Route path=\"/search\" component={Search} />\r\n        <Route path=\"/movie/:id\" component={Detail} />\r\n        <Route path=\"/show/:id\" component={Detail} />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </>\r\n  </Router>\r\n);\r\n/**논리장\r\n * react-router-dom 에서 HashRouter,Route,Redirect,Switch\r\n * 해쉬 라우터를 이용 - route로 길과 컴포넌트를 빼준다.\r\n *  그외 경로는 리다이렉트 시킨다.\r\n * 아싸리, 여러길로 가는것을 원하지 않기떄문에 switch를 사용한다.\r\n */\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size:12px;\r\n        background-color:rgba(20, 20, 20, 1);\r\n        color:white;\r\n        padding-top:50px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React from \"react\";\nimport Router from \"components/Router\";\nimport GlobalStyles from \"components/GlobalStyles\";\n\nfunction App() {\n  return (\n    <>\n      <Router />\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n\n/**논리장\n *     \n *  \"axios\": \"^0.19.0\",\n    \"prop-types\": \"^15.7.2\",\n    \"react-helmet\": \"^5.2.1\",\n    \"react-router-dom\": \"^5.1.2\",\n    \"styled-components\": \"^4.4.1\",\n    \"styled-reset\": \"^4.0.9\"\n\n * App에서 모든 컴포넌트가 시작합니다.\n * Router컴포넌트와 글로벌 스타일 컴포넌트로 css초기화를 합니다.\n */\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./api\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}